//<source lang="javascript">
// This page is for keeping track of JavaScript that may no longer be useful/functional someday.

// hasClass(): Uses regular expressions and caching for better performance.
var hasClass = (function () {
	var reCache = {};
	return function (element, className) {
		return (reCache[className] ? reCache[className] :
			(reCache[className] = new RegExp("(?:\\s|^)" + className + "(?:\\s|$)"))).test(element.className);
   };
})();

var addLoadEvent = addOnloadHook;
var import_script = importScript;
var import_style = importStylesheet;

// Cross-browser event attachment with caching.
var addEvent = (function () {
	var _fn = function(obj, e, fn) {
		if (obj.addEventListener) {
			_fn = function(obj, e, fn) { obj.addEventListener(e, fn, false); };
		} else if (obj.attachEvent) {
			_fn = function(obj, e, fn) { obj.attachEvent('on'+e, function() { fn( window.event ); } ); };
		} else {
			_fn = function(obj, e, fn) { obj['on'+e] = fn; };
		}
		_fn(obj, e, fn);
	};
	return function(obj, e, fn) { _fn(obj, e, fn); };
})();

// Provides an easy way to disable load dependent features
function delLoadEvent(func) {
	for (var i = 0; i < onloadFuncts.length; i++) {
		if (onloadFuncts[i] == func)
			onloadFuncts.splice(i, 1);
	}
}
 
function get_query_value(query, name)
{
	var value = (name && query && query.match && query.match('[&?]' + name + '=([^&]*)') || '');
	return value && decodeURIComponent(value[1]) || '';
}

// Removes the default no-license option for image uploads. 
// All new image uploads must be tagged with a license or nld
function remove_no_license() {
	if ( wgNamespaceNumber != -1 || wgTitle != "Upload" )
		return;
	var license = document.getElementById("wpLicense");
	if (!license)
		return;
	var options = license.getElementsByTagName("option");
	if (!options)
		return;
	license.removeChild(options[0]);
}
 
addOnloadHook(remove_no_license);